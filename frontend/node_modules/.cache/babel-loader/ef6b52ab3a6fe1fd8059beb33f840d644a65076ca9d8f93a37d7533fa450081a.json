{"ast":null,"code":"var _jsxFileName = \"E:\\\\Gowthambhargav\\\\Projects\\\\Video-Chat-App-MERN Stack\\\\Socket-io-test2\\\\frontend\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n// import { io } from \"socket.io-client\";\nimport { socket } from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [connectedUsers, setConnectedUsers] = useState({});\n  const [message, setMessage] = useState();\n  const [msgrecived, setmsgRecived] = useState();\n  // const [to, setTo] = useState(\"\");\n  useEffect(() => {\n    const name = prompt(\"Enter your Name\");\n    const email = prompt(\"Enter your email\");\n    localStorage.setItem(\"name\", name);\n    const user = {\n      userName: name,\n      email: email\n    };\n    // Emit the 'join' event to send user information to the server\n    socket.emit(\"join\", user);\n\n    // Listen for 'connectedUsers' event to receive the list of connected users\n    socket.on(\"connectedUsers\", users => {\n      setConnectedUsers(users);\n    });\n    socket.on(\"recive_msg\", data => {\n      setmsgRecived(data);\n      console.log(data, \"jhsgdfjhghgj\");\n    });\n  }, [socket]);\n  const handelChange = e => {\n    setMessage(e.target.value);\n  };\n  const handelSubmit = e => {\n    e.preventDefault();\n    const author = localStorage.getItem(\"name\");\n    console.log(author);\n    socket.emit(\"message\", {\n      message,\n      author\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message\",\n      value: message,\n      onChange: handelChange,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handelSubmit,\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"test-connection\",\n      children: Object.keys(connectedUsers).map(userId => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \" \", connectedUsers[userId].userName, \", -----\", connectedUsers[userId].socketId, \"-- \"]\n      }, userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        console.log(msgrecived);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msgrecived && Object.keys(msgrecived).map(usermg => {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), msgrecived[usermg].author, \"\", msgrecived[usermg].msg]\n          }, usermg, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"BLlqxcdMwYFslN3QPXHgNG8Ap0U=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","socket","jsxDEV","_jsxDEV","Chat","_s","connectedUsers","setConnectedUsers","message","setMessage","msgrecived","setmsgRecived","name","prompt","email","localStorage","setItem","user","userName","emit","on","users","data","console","log","handelChange","e","target","value","handelSubmit","preventDefault","author","getItem","children","placeholder","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","Object","keys","map","userId","socketId","usermg","msg","_c","$RefreshReg$"],"sources":["E:/Gowthambhargav/Projects/Video-Chat-App-MERN Stack/Socket-io-test2/frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { io } from \"socket.io-client\";\r\nimport { socket } from \"../socket\";\r\nfunction Chat() {\r\n  const [connectedUsers, setConnectedUsers] = useState({});\r\n  const [message, setMessage] = useState();\r\n  const [msgrecived, setmsgRecived] = useState();\r\n  // const [to, setTo] = useState(\"\");\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your Name\");\r\n    const email = prompt(\"Enter your email\");\r\n    localStorage.setItem(\"name\", name);\r\n    const user = {\r\n      userName: name,\r\n      email: email,\r\n    };\r\n    // Emit the 'join' event to send user information to the server\r\n    socket.emit(\"join\", user);\r\n\r\n    // Listen for 'connectedUsers' event to receive the list of connected users\r\n    socket.on(\"connectedUsers\", (users) => {\r\n      setConnectedUsers(users);\r\n    });\r\n    socket.on(\"recive_msg\", (data) => {\r\n      setmsgRecived(data);\r\n      console.log(data, \"jhsgdfjhghgj\");\r\n    });\r\n  }, [socket]);\r\n\r\n  const handelChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    const author = localStorage.getItem(\"name\");\r\n    console.log(author);\r\n    socket.emit(\"message\", { message, author });\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        placeholder=\"Message\"\r\n        value={message}\r\n        onChange={handelChange}\r\n        type=\"text\"\r\n      />\r\n      <button onClick={handelSubmit} type=\"submit\">\r\n        Submit\r\n      </button>\r\n      <ul id=\"test-connection\">\r\n        {Object.keys(connectedUsers).map((userId) => (\r\n          <li key={userId}>\r\n            <strong>Name:</strong> {connectedUsers[userId].userName}, -----\r\n            {connectedUsers[userId].socketId}\r\n            -- {}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {/* <div>{msgrecived}</div> */}\r\n      <div\r\n        onClick={() => {\r\n          console.log(msgrecived);\r\n        }}\r\n      >\r\n        <div>\r\n          {msgrecived &&\r\n            Object.keys(msgrecived).map((usermg) => {\r\n              <div key={usermg}>\r\n                <strong>Name:</strong>\r\n                {msgrecived[usermg].author}\r\n                {\"\"}\r\n                {msgrecived[usermg].msg}\r\n              </div>;\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}